/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controlador.ControladorArea;
import controlador.ControladorCama;
import javax.swing.JOptionPane;
import logica.Area;
import logica.Cama;
import logica.Usuario;

/**
 *
 * @author tovar
 */
public class InterfazCama extends javax.swing.JFrame {

    /**
     * Creates new form InterfazCama
     */
    Usuario usuarioActual;
    InterfazCama(Usuario usuarioActual) {
        initComponents();
        limpiar();
        this.setLocationRelativeTo(null);
        this.setTitle("Gestion Camas");
        this.usuarioActual = usuarioActual;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoRadio = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textoCodigoCama = new javax.swing.JTextField();
        textoCodigoArea = new javax.swing.JTextField();
        textoDescripcion = new javax.swing.JTextField();
        botonBuscarCama = new javax.swing.JButton();
        botonAgregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        radioAgregar = new javax.swing.JRadioButton();
        radioModificar = new javax.swing.JRadioButton();
        botonModificar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        comboEstado = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        atrasB = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Codigo Cama:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        jLabel3.setText("Codigo Area:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel4.setText("Descripcion:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

        jLabel5.setText("Estado:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));
        getContentPane().add(textoCodigoCama, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 133, -1));

        textoCodigoArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoCodigoAreaActionPerformed(evt);
            }
        });
        getContentPane().add(textoCodigoArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 162, 133, -1));
        getContentPane().add(textoDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 188, 133, -1));

        botonBuscarCama.setText("Buscar Cama");
        botonBuscarCama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarCamaActionPerformed(evt);
            }
        });
        getContentPane().add(botonBuscarCama, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 120, -1));

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, -1));

        jLabel1.setText("Â¿Que desea hacer?");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        grupoRadio.add(radioAgregar);
        radioAgregar.setText("Agregar Cama");
        radioAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(radioAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, -1, -1));

        grupoRadio.add(radioModificar);
        radioModificar.setText("Modificar Cama");
        radioModificar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioModificarItemStateChanged(evt);
            }
        });
        radioModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioModificarActionPerformed(evt);
            }
        });
        getContentPane().add(radioModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, -1, -1));

        botonLimpiar.setText("Limpiar");
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(botonLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, -1, -1));

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar:", "activa", "inactiva" }));
        getContentPane().add(comboEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 133, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Agregar Cama");

        atrasB.setText("Atras");
        atrasB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addComponent(atrasB)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(atrasB))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/bed.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 70, 70));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/hospital-bed (1).png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 80, 70));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/hospital-bed.png"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 80, 60));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/fondo-blanco.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 460, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarCamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarCamaActionPerformed
        // TODO add your handling code here:

        ControladorCama cm = new ControladorCama();
        Cama cama = new Cama();
        try {
            cama = cm.consultarCama(Integer.valueOf(textoCodigoCama.getText()));
            if (cama.getNumeroCama() == 0) {
                // cama no existe
                JOptionPane.showMessageDialog(this, "Cama no existe", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (cama.getNumeroCama() == -1) {
                //error sql
                JOptionPane.showMessageDialog(this, "Error con la base de datos", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (cama.getNumeroCama() == -2) {
                //error desconocido
                JOptionPane.showMessageDialog(this, "Error desconocido", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                textoCodigoArea.setText(String.valueOf(cama.getCodigoArea()));
                textoDescripcion.setText(cama.getDescripcion());

                if (cama.getEstado().equals("activa")) {
                    comboEstado.setSelectedIndex(1);
                } else {
                    comboEstado.setSelectedIndex(2); //inactiva
                }

                if (radioModificar.isSelected()) {
                    textoCodigoCama.setEnabled(false);
                    textoCodigoCama.setEditable(false);
                    textoCodigoArea.setEnabled(true);
                    textoCodigoArea.setEditable(true);
                    textoDescripcion.setEnabled(true);
                    textoDescripcion.setEditable(true);
                    comboEstado.setEnabled(true);
                    botonBuscarCama.setEnabled(false);
                    botonModificar.setEnabled(true);

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Solo se aceptan numeros en codigo cama y codigo area", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_botonBuscarCamaActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    private void radioModificarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioModificarItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_radioModificarItemStateChanged

    private void radioModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioModificarActionPerformed
        // TODO add your handling code here:
        botonAgregar.setEnabled(false);
        botonBuscarCama.setEnabled(true);
        botonModificar.setEnabled(false);

        //textos
        textoCodigoCama.setText("");
        textoCodigoCama.setEnabled(true);
        textoCodigoCama.setEditable(true);
        textoCodigoArea.setText("");
        textoCodigoArea.setEnabled(false);
        textoCodigoArea.setEditable(false);
        textoDescripcion.setText("");
        textoDescripcion.setEnabled(false);
        textoDescripcion.setEditable(false);

        //combo
        comboEstado.setEnabled(false);
        comboEstado.setSelectedIndex(0);

    }//GEN-LAST:event_radioModificarActionPerformed

    private void radioAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAgregarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_radioAgregarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        try {
            if (validarArea()) {
                if (validarCombo()) {
                    ControladorCama ccama = new ControladorCama();
                    Cama c = new Cama();

                    c.setNumeroCama(Integer.valueOf(textoCodigoCama.getText()));
                    c.setDescripcion(textoDescripcion.getText());
                    c.setCodigoArea(Integer.valueOf(textoCodigoArea.getText()));

                    c.setEstado(comboEstado.getSelectedItem().toString());
                    boolean res = ccama.actualizarCama(c);
                    if (res) {
                        JOptionPane.showMessageDialog(this, "Se actualizo la cama correctamente", "Exito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo actualizar la cama", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            limpiar();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Solo se aceptan numeros en codigo cama y codigo area", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonModificarActionPerformed

    private void textoCodigoAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoCodigoAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoCodigoAreaActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        // TODO add your handling code here:
        ControladorCama ccama = new ControladorCama();
        try {
            Cama c = ccama.consultarCama(Integer.valueOf(textoCodigoCama.getText()));

            if (c.getNumeroCama() != 0) {
                JOptionPane.showMessageDialog(this, "Cama ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (validarArea()) {
                    if (validarCombo()) {
                        Cama camaAgregar = new Cama();
                        camaAgregar.setNumeroCama(Integer.valueOf(textoCodigoCama.getText()));
                        camaAgregar.setCodigoArea(Integer.valueOf(textoCodigoArea.getText()));
                        camaAgregar.setDescripcion(textoDescripcion.getText());
                        camaAgregar.setEstado(comboEstado.getSelectedItem().toString());
                        boolean res = ccama.insertarCama(camaAgregar);
                        if (res) {
                            JOptionPane.showMessageDialog(this, "Se agrego la cama correctamente", "Exito", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "No se pudo agregar la cama", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        limpiar();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Solo se aceptan numeros en codigo cama y codigo area", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_botonAgregarActionPerformed

    private void atrasBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasBActionPerformed
        // TODO add your handling code here:
        InterfazAdministrador ventanaAdmin = new InterfazAdministrador(usuarioActual);
        ventanaAdmin.setVisible(true);
        dispose();
    }//GEN-LAST:event_atrasBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazCama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazCama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazCama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazCama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new InterfazCama().setVisible(true);
              //  java.util.Date today = new java.util.Date();
              //  System.out.println(new java.sql.Timestamp(today.getTime()));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atrasB;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscarCama;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.ButtonGroup grupoRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton radioAgregar;
    private javax.swing.JRadioButton radioModificar;
    private javax.swing.JTextField textoCodigoArea;
    private javax.swing.JTextField textoCodigoCama;
    private javax.swing.JTextField textoDescripcion;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        botonAgregar.setEnabled(true);
        botonBuscarCama.setEnabled(false);
        radioAgregar.setSelected(true);
        textoCodigoCama.setText("");
        textoCodigoCama.setEnabled(true);
        textoCodigoCama.setEditable(true);
        textoCodigoArea.setText("");
        textoCodigoArea.setEnabled(true);
        textoCodigoArea.setEditable(true);
        textoDescripcion.setText("");
        textoDescripcion.setEnabled(true);
        textoDescripcion.setEditable(true);
        comboEstado.setSelectedIndex(0);
        botonModificar.setEnabled(false);
        comboEstado.setEnabled(true);
    }

    private boolean validarArea() {
        ControladorArea ca = new ControladorArea();
        Area a = ca.consultarArea(Integer.valueOf(textoCodigoArea.getText()));
        if (a.getCodigo() == 0) {
            JOptionPane.showMessageDialog(this, "Area no existe", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private boolean validarCombo() {
        if (comboEstado.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un estado", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

}
